mixin listLink(url, text, liClass, aClass)
  li(class=liClass)
    a(class=aClass, href=url)&attributes(attributes)= text

mixin selectOption(value, text, optionClass)
  option(value=value, class=optionClass)&attributes(attributes)= text

mixin textarea(inputId, labelText)
  .contact-form__input-wrap
    label.contact-form__label(for=inputId)= labelText
    textarea.contact-form__textarea(id=inputId)&attributes(attributes)

mixin input(inputId, labelText)
  .contact-form__input-wrap
    label.contact-form__label(for=inputId)= labelText
    input.contact-form__input(id=inputId, type='text')&attributes(attributes)

mixin button(text, url)
  a.button(href=url)= text
    svg.button__svg(xmlns='http://www.w3.org/2000/svg', viewBox='0 -1 16 10')
      polyline.button__polyline(points='1,4 15,4')
      polyline.button__polyline(points='11,1 15,4 11,7')

mixin news(img, alt = '', title, isodate, text, titleTag = 'h2')
  article.news-item.row
    .news-item__img
      img(src=img, alt=alt)
    .news-item__body
      #{titleTag}.h4= title
      time.news-item__date(datetime=isodate)= intl.format(new Date(isodate))
      .news-item__text!= marked.parse(text)

mixin work(id, title, coverTitle, description, technicalDescription, image, detailImage, category, closeLabel, myRoleLabel, imdbUrl, isVFS)
  li.work-item(data-category=category.toLowerCase().replace(/\s/g, '-'))
    a.work-item__link(href='#', data-work-id=id, data-work-image=detailImage, data-work-imdb-url=imdbUrl)
      .work-item__img(style=`background-image: url(${image})`)
      - if (isVFS)
        img.work-item__vfs-logo(src='/img/logos/vfs.svg', alt)
      .work-item__body
        h2.work-item__cover-title= coverTitle
    .work-item__metadata
      .work-item__title= title
      .work-item__close-label!= closeLabel
      .work-item__my-role-label!= myRoleLabel
      .work-item__description!= marked.parse(description)
      .work-item__technical-description!= marked.parse(technicalDescription)

mixin videoPlayer(videos)
  - const preloadedVideo = videos[0];
  - const preloadedVideoId = langFallback(preloadedVideo.fields.videoUrl).replace(/\D+/g, '');

  .video-player
    div(data-type='vimeo', data-video-id=preloadedVideoId)
  .row
    .video-description!= marked.parse(langFallback(preloadedVideo.fields.description))

mixin slide(url, alt = '')
  li
    .slider-image(style=`background-image: url(${url});`, title=alt)

mixin whatIDoSection(name, body)
  - const id = name.toLowerCase().replace(/\W+/g, '-')
  li(id=id)
    h2.h5= name
    div!= marked.parse(body)
